<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Ayush’s AI Assistant</title>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', Roboto, Oxygen, sans-serif;
      background: linear-gradient(135deg, #1e3c72, #b3e5fc);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
      overflow: hidden;
    }

    .chat-container {
      width: 100%;
      max-width: 800px;
      background: rgba(255, 255, 255, 0.95);
      border-radius: 20px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      height: 85vh;
      overflow: hidden;
    }

    .header {
      background: #1e3c72;
      color: white;
      padding: 15px 20px;
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      display: flex;
      align-items: center;
      gap: 10px;
      font-size: 1.5rem;
      font-weight: bold;
    }

    .header svg {
      fill: white;
    }

    .chat-window {
      flex: 1;
      padding: 20px;
      overflow-y: auto;
      background: white;
    }

    .message {
      margin-bottom: 15px;
      display: flex;
    }

    .user-message { justify-content: flex-end; }
    .bot-message { justify-content: flex-start; }

    .bubble {
      max-width: 70%;
      padding: 12px 18px;
      border-radius: 15px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }

    .user-bubble {
      background: #1e3c72;
      color: white;
    }

    .bot-bubble {
      background: #e3f2fd;
      color: #1e3c72;
    }

    .loading {
      display: flex;
      justify-content: flex-start;
      margin-bottom: 15px;
    }

    .dot {
      width: 10px;
      height: 10px;
      background: #666;
      border-radius: 50%;
      margin: 0 5px;
      animation: bounce 0.6s infinite;
    }

    .dot:nth-child(2) { animation-delay: 0.2s; }
    .dot:nth-child(3) { animation-delay: 0.4s; }

    @keyframes bounce {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-10px); }
    }

    .input-area {
      padding: 15px;
      border-top: 1px solid #ddd;
      background: rgba(255, 255, 255, 0.95);
      border-bottom-left-radius: 20px;
      border-bottom-right-radius: 20px;
    }

    form {
      display: flex;
      gap: 10px;
    }

    textarea {
      flex: 1;
      padding: 12px;
      border: 1px solid #ccc;
      border-radius: 10px;
      resize: none;
      font-size: 1rem;
      transition: 0.3s;
    }

    textarea:focus {
      border-color: #1e3c72;
      box-shadow: 0 0 10px rgba(30, 60, 114, 0.3);
      outline: none;
    }

    button {
      padding: 12px 20px;
      background: #1e3c72;
      color: white;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    button:hover {
      background: #16325a;
      transform: scale(1.05);
    }

    @media (max-width: 640px) {
      .chat-container {
        max-width: 100%;
        height: 90vh;
      }
      .bubble {
        max-width: 80%;
      }
    }
  </style>
</head>
<body>
  <div class="chat-container">
    <div class="header">
      <svg width="24" height="24" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path d="M3 8h13M3 16h13M17 21l4-4-4-4" />
      </svg>
      Ayush’s AI Assistant
    </div>
    <div class="chat-window" id="chatWindow"></div>
    <div class="input-area">
      <form id="chatForm">
        <textarea id="userInput" placeholder="What can I help you with today?" rows="1"></textarea>
        <button type="submit">Send</button>
      </form>
    </div>
  </div>

  <script>
    const chatWindow = document.getElementById('chatWindow');
    const userInput = document.getElementById('userInput');
    const chatForm = document.getElementById('chatForm');
    const apiUrl = '<%= apiUrl %>'; // Replace dynamically if needed

    let messages = [
      { text: "What can I help you with today?", isUser: false }
    ];

    function addMessage(text, isUser) {
      const messageDiv = document.createElement('div');
      messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;
      const bubbleDiv = document.createElement('div');
      bubbleDiv.className = `bubble ${isUser ? 'user-bubble' : 'bot-bubble'}`;
      bubbleDiv.textContent = text;
      messageDiv.appendChild(bubbleDiv);
      chatWindow.appendChild(messageDiv);
      chatWindow.scrollTop = chatWindow.scrollHeight;
    }

    function showLoading() {
      const loadingDiv = document.createElement('div');
      loadingDiv.className = 'loading';
      for (let i = 0; i < 3; i++) {
        const dot = document.createElement('div');
        dot.className = 'dot';
        loadingDiv.appendChild(dot);
      }
      chatWindow.appendChild(loadingDiv);
      chatWindow.scrollTop = chatWindow.scrollHeight;
    }

    function clearLoading() {
      const loading = chatWindow.querySelector('.loading');
      if (loading) loading.remove();
    }

    chatForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const input = userInput.value.trim();
      if (!input) return;

      addMessage(input, true);
      userInput.value = '';
      showLoading();

      try {
        const response = await fetch(apiUrl, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ input })
        });
        const data = await response.json();
        clearLoading();
        const cleaned = data.response.replace(/^.*?(?=Hello|Certainly)/s, '');
        addMessage(cleaned, false);
      } catch (error) {
        clearLoading();
        addMessage('Error: Try again later', false);
        console.error('Fetch error:', error);
      }
    });

    messages.forEach(msg => addMessage(msg.text, msg.isUser));
  </script>
</body>
</html>
